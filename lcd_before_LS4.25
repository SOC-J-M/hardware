#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// LCD initialization
LiquidCrystal_I2C lcd(0x27, 20, 4);

unsigned long previousMillis = 0;  // Stores the last time the display was updated
const long interval = 1000;        // Interval at which to update the display (milliseconds)
const int debounceDelay = 50;      // Debounce delay in milliseconds

int clickCounter = 0; // Counter for the limit switch clicks

void setup() {
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();

  pinMode(2, INPUT_PULLUP);  // Configure digital pin 6 as an input with pull-up resistor

  // Initial example display
  displayInfo(123, 4, "Active", clickCounter);
}

void loop() {
  unsigned long currentMillis = millis();

  // Read the state of the limit switch on pin 6
  int limitSwitchState = digitalRead(6);

  // If the limit switch is triggered (assuming LOW when pressed due to pull-up resistor)
  if (limitSwitchState == LOW) {
    // Increment click counter
    clickCounter++;

    // Update display with click counter
    updateFourthLine(clickCounter);

    // Delay to debounce the switch
    delay(debounceDelay);
  } else {
    // Update the display every second
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;  // Save the last update time

      // Example of updating the display with new values
      static int timeElapsed = 123;
      static int workOrderNumber = 4;
      static String status = "Active";

      displayInfo(timeElapsed, workOrderNumber, status, clickCounter);

      // Update variables for demonstration
      timeElapsed += 1; // Increment time elapsed for demonstration
      status = (timeElapsed % 2 == 0) ? "Active" : "Paused"; // Toggle status for demonstration
    }
  }
}

void displayInfo(int timeElapsed, int workOrderNumber, String status, int clickCounter) {
  lcd.clear(); // Clear the display before updating

  lcd.setCursor(0, 0); // Set cursor to first line
  lcd.print("Time Elapsed: ");
  lcd.print(timeElapsed);

  lcd.setCursor(0, 1); // Set cursor to second line
  lcd.print("Work Order Number: ");
  lcd.print(workOrderNumber);

  lcd.setCursor(0, 2); // Set cursor to third line
  lcd.print("Status: ");
  lcd.print(status);

  lcd.setCursor(0, 3); // Set cursor to fourth line
  lcd.print("Clicks: ");
  lcd.print(clickCounter);
}

void updateFourthLine(int value) {
  lcd.setCursor(0, 3); // Set cursor to fourth line
  lcd.print("Clicks: ");
  lcd.print(value);
}
